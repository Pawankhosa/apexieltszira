@model AdminPaneNew.Areas.OfficialAdmin.Models.Achievers

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/OfficialAdmin/Views/Shared/Layout.cshtml";
}
@section Pagename {

    Achievers

}
@using (Html.BeginForm("Edit", "Achievers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h3>Edit</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Achieverid)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                <input id="file" type="file" title="search image" class="form-control" name="file" />
                @Html.Label("250px X 200px", htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                <img src="~/UploadedFiles/@Model.Image" alt="" style="width:150px;" class="img-responsive" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reading, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reading, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reading, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Writing, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Writing, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Writing, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Listening, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Listening, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Listening, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Speaking, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Speaking, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Speaking, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Overall, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Overall, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Overall, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-danger" />
 	       @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}
<div class="preview_box">
    <img id="preview_img" src="" />
</div>
<div id="image-holder"> </div>
<div>

</div>
